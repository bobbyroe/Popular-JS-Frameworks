// Generated by CoffeeScript 1.7.1
var height, log, min_count_threshold, radius, svg, tag_count_domain, width;

log = console.log.bind(console);

width = window.innerWidth;

height = window.innerHeight;

radius = Math.min(width, height) / 2;

min_count_threshold = 100;

tag_count_domain = {
  min: 1000000,
  max: 0
};

svg = d3.select("body").append("svg").attr("width", width).attr("height", height);

d3.csv("js_libs.csv", function(error, data) {
  var circle, force, gs, hue, i, index, item, lib, libraries, radius_scale, tags, text, text_num, _i, _j, _k, _len, _len1, _len2;
  tags = [];
  libraries = [];
  for (i = _i = 0, _len = data.length; _i < _len; i = ++_i) {
    item = data[i];
    if (tags.indexOf(item.TagName) === -1) {
      tags.push(item.TagName);
      libraries.push({
        tag: item.TagName,
        count: 0
      });
    }
  }
  for (i = _j = 0, _len1 = data.length; _j < _len1; i = ++_j) {
    item = data[i];
    index = tags.indexOf(item.TagName);
    if (index !== -1) {
      libraries[index].count += +item.TagCount;
    }
  }
  libraries = libraries.filter(function(d) {
    return d.count > min_count_threshold;
  });
  for (_k = 0, _len2 = libraries.length; _k < _len2; _k++) {
    lib = libraries[_k];
    tag_count_domain.min = Math.min(tag_count_domain.min, lib.count);
    tag_count_domain.max = Math.max(tag_count_domain.max, lib.count);
  }
  radius_scale = d3.scale.linear().domain([tag_count_domain.min, tag_count_domain.max]).range([2.5, 250]);
  hue = d3.scale.linear().domain([tag_count_domain.min, tag_count_domain.max]).range([270, 0]);
  force = d3.layout.force().nodes(libraries).links([]).charge(function(d) {
    return radius_scale(d.count) * -25;
  }).linkDistance(0).size([width, height]);
  gs = svg.selectAll('g').data(libraries).enter().append('g').call(force.drag);
  circle = gs.append('circle').attr('r', function(d) {
    return radius_scale(d.count);
  }).attr("fill", function(d) {
    return d3.hsl(hue(d.count), 1.0, 0.3);
  }).attr("stroke", function(d) {
    return d3.hsl(hue(d.count), 1.0, 0.6);
  }).attr("stroke-width", 2);
  text = gs.append('text').attr("text-anchor", "middle").attr('fill', '#e0e0e0').text(function(d, i) {
    return d.tag;
  }).attr('dx', function(d, i) {
    return 0;
  }).attr('dy', function(d, i) {
    return 20;
  }).style('font-size', '16px');
  text_num = gs.append('text').attr("text-anchor", "middle").attr('fill', '#c0c0c0').text(function(d, i) {
    return " (" + d.count + ")";
  }).attr('dx', function(d, i) {
    return 0;
  }).attr('dy', function(d, i) {
    return 40;
  }).style('font-size', '12px');
  force.on("tick", function() {
    return svg.selectAll('g').attr("transform", function(d) {
      return "translate(" + d.x + "," + d.y + ")";
    });
  });
  return force.start();
});

/*
//@ sourceMappingURL=main.map
*/
